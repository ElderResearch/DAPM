% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{fullFactors}
\alias{fullFactors}
\title{Full Factors}
\usage{
fullFactors(factorVar, choices, NAlevel = TRUE)
}
\arguments{
\item{factorVar}{Vector of values to turn into factors}

\item{choices}{Vector of factor levels to be assigned}

\item{NAlevel}{Should the routine assign an "NA" level to missing values?}
}
\value{
converted thingie
}
\description{
\code{fullFactors} takes a vector of values/factors and turns
}
\details{
This function takes a vector of values/factors and turns
  Them into a factor with a fixed set of levels, and a catch-all level.
  This is important for separate training and scoring scripts, for
  two reasons:

1. The data for scoring is often smaller than the training data
     and therefore may be missing levels comipared to the training
     data, so if you made a factor from the training data and then
     made dummy variables, you would end up missing some dummy
     variables, causing errors at scoring time.

2. We may find that the Top 10 most common values matter the
     most, so we create levels for them, and then a catch-all
     level to handle the rest. This is useful in its own right,
     but it's also possible that the data for scoring might
     have a rare level not seen in the training data, so throwing
     it into the catchall helps it to be seen by the model.
}
\author{
Wayne Folta
}

